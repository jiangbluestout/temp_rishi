<section class="section-p-b {{ section.settings.padding_bottom }} section-p-x">
  <div class="rte {% unless section.settings.full_width %} section-container {% endunless %}">
    <div data-rebuy-id="140173"></div>
    <div class="quiz-container">
      <h2 class="quiz-question">
        <span>I approach tea selection with a(n)</span>
        <div class="custom-select" id="quiz-attitude-wrapper">
          <select id="quiz-attitude">
            <option value="">Select...</option>
            <option value="best-sellers?filter.p.tag=format%3Asachets">Inexperienced</option>
            <option value="all-tea?filter.p.tag=format%3Aloose_leaf&amp;filter.p.tag=format%3Aconcentrates&amp;filter.p.tag=format%3Apowders">
              Knowledgable
            </option>
            <option value="garden-direct-teas?asd=1">Adventurous</option>
            <option value="new-arrivals?asd=1">Curious</option>
            <option value="best-sellers?filter.p.tag=format%3Asachets">Unsure</option>
          </select>
        </div>

        <span>perspective.</span> <span>Iâ€™m looking</span> <span>for a tea to drink</span>
        <div class="custom-select" id="quiz-attitude-wrapper">
          <select id="quiz-time">
            <option value="">Select...</option>
            <option value="&amp;filter.p.tag=caffeine%3Ahigh">First Thing</option>
            <option value="&amp;filter.p.tag=caffeine%3Amedium">In the Afternoon</option>
            <option value="&amp;filter.p.tag=caffeine%3Anone">Before Bed</option>
            <option value="&amp;filter.p.tag=caffeine%3Alow">Any Time</option>
            <option value="">Not sure</option>
          </select>
        </div>
        <div class="custom-select" id="quiz-attitude-wrapper">
          <select id="quiz-mood">
            <option value="">Select...</option>
            <option value="&amp;filter.p.tag=mood%3Aenergizing-awakening">To perk up</option>
            <option value="&amp;filter.p.tag=mood%3Acalming-restful">To get cozy</option>
            <option value="&amp;filter.p.tag=mood%3Adetox-digestif">For wellness</option>
            <option value="&amp;filter.p.tag=mood%3Afortify-revive">To cleanse</option>
            <option value="">just because</option>
          </select>
        </div>
        <span>and typically enjoy</span>
        <div class="custom-select" id="quiz-attitude-wrapper">
          <select id="quiz-flavor">
            <option value="">Select...</option>
            <option value="&amp;filter.p.tag=profile%3Abright-citrusy">Bright &amp; Citrusy</option>
            <option value="&amp;filter.p.tag=profile%3Aclean-green">Clean &amp; Green</option>
            <option value="&amp;filter.p.tag=profile%3Adeep-bittersweet">Deep &amp; Bittersweet</option>
            <option value="&amp;filter.p.tag=profile%3Afruity-berry">Fruity &amp; Berry</option>
            <option value="&amp;filter.p.tag=profile%3Alight-floral">Light &amp; Floral</option>
            <option value="&amp;filter.p.tag=profile%3Aminty-fresh">Minty &amp; Fresh</option>
            <option value="&amp;filter.p.tag=profile%3Arich-earthy">Rich &amp; Earthy</option>
            <option value="&amp;filter.p.tag=profile%3Awarming-spicy">Warming &amp; Spicy</option>
          </select>
        </div>
        <span>flavors.</span>
      </h2>
      <h3 id="initially-hidden">We Think You'd Like</h3>
      <div class="quiz-results" id="productGridContainer"></div>
    </div>
  </div>
</section>

{% schema %}
{
  "name": "Quiz Section",
  "class": "section-html",
  "settings": [
    {
      "type": "header",
      "content": "Component Settings"
    },
    {
      "type": "checkbox",
      "id": "full_width",
      "label": "Full Width?",
      "default": true,
      "info": "If checked, the section will span the full width of the screen."
    },
    {
      "type": "select",
      "id": "padding_bottom",
      "label": "Bottom Padding",
      "info": "This indicates how much padding should be added to the bottom of the section.",
      "options": [
        {
          "value": "none",
          "label": "None"
        },
        {
          "value": "small",
          "label": "Small"
        },
        {
          "value": "medium",
          "label": "Medium"
        },
        {
          "value": "large",
          "label": "Large"
        }
      ],
      "default": "medium"
    }
  ],
  "presets": [
    {
      "name": "Quiz Section",
      "category": "Components"
    }
  ]
}
{% endschema %}

<style>
      .quiz-question {
          font-size: 3.9rem;
      	font-family: ivypresto-headline,ui-serif,serif;
          font-weight: 300;
      }

      .quiz-question select {
          font-size: 1.5rem;
          border-bottom: 1px solid;
          padding: 10px 0px;
          margin: 0 15px;
      }

      .quiz-question option {
          font-weight: 300;
      }

      .quiz-container {
      	padding: 3rem;
      }

      .quiz-results {
      	padding-top: 3rem;
      }

      .quiz-container #productGridContainer .product-grid > div {
      	visibility: unset !important;
      }

      .quiz-container #productGridContainer .product-grid > .text-light,
      .quiz-container #productGridContainer .product-grid > .h-full {
      	display: none;
      }
      #initially-hidden{
        display: none;
      }
        h3#initially-hidden {
          margin-top: 50px;
          color: #B29479;
          text-align:center;
          font-size: 2rem;
          font-family: ivypresto-headline,ui-serif,serif;
          font-weight: 300;
      }
        /* General styling for select elements */
      select {
          appearance: none; /* Remove default arrow in most browsers */
          -webkit-appearance: none; /* Safari */
          -moz-appearance: none; /* Firefox */
          border-bottom: 3px solid #2C3949;
          padding: 5px 10px;
          background-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 20 20"><path fill="%23AA8669" d="M6.5 7.5l3.5 3.5 3.5-3.5z"/></svg>');
          background-repeat: no-repeat;
          background-position: right 5px center;
          background-size: 20px;
          cursor: pointer;
      }

      /* Specific styling for each select to adjust widths or other properties */
      #quiz-attitude, #quiz-time, #quiz-mood, #quiz-flavor {
          width: auto; /* Adjust as needed */
          margin-right: 10px;
      }

    h2.quiz-question {
        line-height: 5rem;
    }

    h2.quiz-question select {
        line-height: 1rem;
        font-family: neue-haas-grotesk-text,ui-sans,sans;
        color: grey;
        margin: 0 20px;
    }

      .quiz-question span {
          margin: 5px;
      }

      .quiz-question select {
          border-bottom: 2px solid #2C3949;
          min-width: 200px;
          text-transform: uppercase;
          font-size: 20px;
      }
    @media(max-width: 768px){
      .quiz-container {
          padding: 10px;
      }
  }
</style>

<style>
  /* The container must be positioned relative: */
  .custom-select {
    position: relative;
    font-family: Arial;
  }

  .custom-select select {
    display: none; /*hide original SELECT element: */
  }

  .select-selected {
    background-color: DodgerBlue;
  }

  /* Style the arrow inside the select element: */
  .select-selected:after {
    position: absolute;
    content: "";
    top: 14px;
    right: 10px;
    width: 0;
    height: 0;
    border: 6px solid transparent;
    border-color: #fff transparent transparent transparent;
  }

  /* Point the arrow upwards when the select box is open (active): */
  .select-selected.select-arrow-active:after {
    border-color: transparent transparent #fff transparent;
    top: 7px;
  }

  /* style the items (options), including the selected item: */
  .select-items div,.select-selected {
    color: #ffffff;
    padding: 8px 16px;
    border: 1px solid transparent;
    border-color: transparent transparent rgba(0, 0, 0, 0.1) transparent;
    cursor: pointer;
  }

  /* Style items (options): */
  .select-items {
    position: absolute;
    background-color: DodgerBlue;
    top: 100%;
    left: 0;
    right: 0;
    z-index: 99;
  }

  /* Hide the items when the select box is closed: */
  .select-hide {
    display: none;
  }

  .select-items div:hover, .same-as-selected {
    background-color: rgba(0, 0, 0, 0.1);
  }
    h2.quiz-question {
      display: flex;
      flex-wrap: wrap;
      align-items: center;
  }

  .select-selected:after {
      top: 44px;
      border-color: #AA8669 transparent transparent transparent;
  }

  .select-selected.select-arrow-active:after {
      border-color: transparent transparent #AA8669 transparent;
      top: 44px;
  }

  .select-selected {
      background: none;
      color: black !important;
      font-family: neue-haas-grotesk-text,ui-sans,sans;
      font-size: 26px;
      text-transform: uppercase;
  }

  .select-selected {
      border-bottom: 4px solid #5F6875;
      min-width: 340px;
      padding-right: 70px;
      margin: 0 15px;
  }

  .select-items {
      font-family: neue-haas-grotesk-text,ui-sans,sans;
      font-size: 26px;
      text-transform: uppercase;
      background: #FAF9F7;
      color: #626C75 !important;
      margin: 0 15px;
  }

  .select-items div{
      font-family: neue-haas-grotesk-text,ui-sans,sans;
      font-size: 24px;
      text-transform: uppercase;
      background: #FAF9F7;
      color: #626C75 !important;
      padding: 10px 20px;
  }

  .select-selected:after {
    right: 20px;
}
  h2.quiz-question {
    font-size: 48px;
}

@media(max-width: 768px){
    h2.quiz-question {
    font-size: 36px;
}
    .select-selected {
    font-size: 20px;
}
}


</style>

<script>
  document.querySelectorAll('.quiz-question select').forEach(selectElement => {

    selectElement.addEventListener('change', function() {

      let quiz_attitude = document.getElementById('quiz-attitude').value;
      let quiz_time = document.getElementById('quiz-time').value;
      let quiz_mood = document.getElementById('quiz-mood').value;
      let quiz_flavor = document.getElementById('quiz-flavor').value;

      if (quiz_attitude !== "" || quiz_time !== "" || quiz_mood !== "" || quiz_flavor !== "") {
        let quiz_url = quiz_attitude + quiz_time + quiz_mood + quiz_flavor;
        document.getElementById('initially-hidden').style.display = 'block';


        fetch('/collections/' + quiz_url)
          .then(response => response.text())
          .then(html => {
            const parser = new DOMParser();
            const doc = parser.parseFromString(html, "text/html");
            const content = doc.querySelector('#productGridContainer').innerHTML;
            document.getElementById('productGridContainer').innerHTML = content;
          })
          .catch(err => console.error(err));
      }

    });

  });
</script>

<script>
  var x, i, j, l, ll, selElmnt, a, b, c;
  /* Look for any elements with the class "custom-select": */
  x = document.getElementsByClassName("custom-select");
  l = x.length;
  for (i = 0; i < l; i++) {
    selElmnt = x[i].getElementsByTagName("select")[0];
    ll = selElmnt.length;
    /* For each element, create a new DIV that will act as the selected item: */
    a = document.createElement("DIV");
    a.setAttribute("class", "select-selected");
    a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
    x[i].appendChild(a);
    /* For each element, create a new DIV that will contain the option list: */
    b = document.createElement("DIV");
    b.setAttribute("class", "select-items select-hide");
    for (j = 1; j < ll; j++) {
      /* For each option in the original select element,
      create a new DIV that will act as an option item: */
      c = document.createElement("DIV");
      c.innerHTML = selElmnt.options[j].innerHTML;
      c.addEventListener("click", function(e) {
          /* When an item is clicked, update the original select box,
          and the selected item: */
          var y, i, k, s, h, sl, yl;
          s = this.parentNode.parentNode.getElementsByTagName("select")[0];
          sl = s.length;
          h = this.parentNode.previousSibling;
          for (i = 0; i < sl; i++) {
            if (s.options[i].innerHTML == this.innerHTML) {
              s.selectedIndex = i;
              h.innerHTML = this.innerHTML;
              y = this.parentNode.getElementsByClassName("same-as-selected");
              yl = y.length;
              for (k = 0; k < yl; k++) {
                y[k].removeAttribute("class");
              }
              this.setAttribute("class", "same-as-selected");
              let event = new Event('change');
              s.dispatchEvent(event);
              break;
            }
          }
          h.click();
      });
      b.appendChild(c);
    }
    x[i].appendChild(b);
    a.addEventListener("click", function(e) {
      /* When the select box is clicked, close any other select boxes,
      and open/close the current select box: */
      e.stopPropagation();
      closeAllSelect(this);
      this.nextSibling.classList.toggle("select-hide");
      this.classList.toggle("select-arrow-active");
    });
  }

  function closeAllSelect(elmnt) {
    /* A function that will close all select boxes in the document,
    except the current select box: */
    var x, y, i, xl, yl, arrNo = [];
    x = document.getElementsByClassName("select-items");
    y = document.getElementsByClassName("select-selected");
    xl = x.length;
    yl = y.length;
    for (i = 0; i < yl; i++) {
      if (elmnt == y[i]) {
        arrNo.push(i)
      } else {
        y[i].classList.remove("select-arrow-active");
      }
    }
    for (i = 0; i < xl; i++) {
      if (arrNo.indexOf(i)) {
        x[i].classList.add("select-hide");
      }
    }
  }

  /* If the user clicks anywhere outside the select box,
  then close all select boxes: */
  document.addEventListener("click", closeAllSelect);
</script>
